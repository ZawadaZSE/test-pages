{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ObjectMetadata","this","props","metadata","name","value","React","Component","ObjectDetails","object","span","src","img","description","PlatformDetails","context","changeSelection","newItem","setState","selection","state","selectedItem","prevProps","platformItems","platformName","map","item","type","onClick","Site","generateMenuItems","platform","element","Item","selectedPlatform","selectPlatform","newSelectedPlatform","platforms","className","wrap","overlay","placement","App","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db0f82e1.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport {Button, Col, Dropdown, Image, Menu, Row, Space} from \"antd\";\n\n\nclass ObjectMetadata extends React.Component {\n  render() {\n    return (\n      <div>{this.props.metadata.name}: {this.props.metadata.value}</div>\n    );\n  }\n}\n\nObjectMetadata.propTypes = {};\n\nclass ObjectDetails extends React.Component {\n\n  render() {\n    return (\n      this.props.object ?\n        <div>\n          <h1>{this.props.object.name}</h1>\n          <Row>\n            <Col span={6}>\n              <Image src={this.props.object.img}/>\n            </Col>\n            <Col span={18}>\n              <ObjectMetadata metadata={this.props.object.metadata}/>\n            </Col>\n          </Row>\n          <p>{this.props.object.description}</p>\n        </div>\n        :\n        <div>Nie mam ulubionych</div>\n    )\n  }\n}\n\nclass PlatformDetails extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      selection: props.selectedItem,\n    }\n  }\n\n  changeSelection = newItem => {\n    this.setState({selection: newItem});\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.platformItems !== this.props.platformItems) {\n      this.setState({\n        selection: this.props.selectedItem,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.props.platformName}</h1>\n        <Row>\n          <Col span={6}>\n            <div>\n              {this.props.platformItems.map(item =>\n                <div>\n                  <Button type={item === this.state.selection ? \"primary\" : \"default\"}\n                          onClick={() => this.changeSelection(item)}>{item.name}</Button>\n                </div>\n              )}\n            </div>\n          </Col>\n          <Col span={18}>\n            <ObjectDetails object={this.state.selection}/>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\n\nclass Site extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      selectedPlatform: props.platforms[0],\n      selectedItem: props.platforms[0].platformItems[0],\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Moje top 10!</h1>\n        <Space wrap>\n          {\n            this.props.platforms.map(platform => (\n              <Dropdown overlay={this.generateMenuItems(platform)}\n                        placement=\"topCenter\"\n                        onClick={() => this.selectPlatform(platform)}>\n                <Button type={\n                  platform === this.state.selectedPlatform ? \"primary\" : \"default\"\n                }>{platform.platformName}</Button>\n              </Dropdown>\n            ))\n          }\n        </Space>\n        <p/>\n        <PlatformDetails platformName={this.state.selectedPlatform.platformName}\n                         platformItems={this.state.selectedPlatform.platformItems}\n                         selectedItem={this.state.selectedItem}/>\n      </div>\n    )\n  }\n\n  generateMenuItems = platform => (\n    <Menu>\n      {\n        (platform.platformItems || []).map(\n          element => {\n            return <Menu.Item onClick={() => this.setState({\n              selectedPlatform: platform,\n              selectedItem: element\n            })}>{element.name}</Menu.Item>\n          }\n        )\n      }\n    </Menu>\n  );\n\n  selectPlatform = newSelectedPlatform => {\n    this.setState({\n      selectedPlatform: newSelectedPlatform,\n      selectedItem: newSelectedPlatform.platformItems[0],\n    })\n  }\n\n}\n\nfunction App() {\n  const nowaListaWszystkiego = [\n    {\n      id: 1,\n      platformName: \"Netflix\",\n      platformItems: [\n        {\n          \"id\": 1,\n          \"name\": \"Criminal Minds\",\n          \"img\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Criminal-Minds.svg/1200px-Criminal-Minds.svg.png\",\n          \"description\": \"Super serial polecam!\",\n          \"metadata\": {\n            \"name\": \"Author\",\n            \"value\": \"Ktos\",\n          },\n          \"rating\": 5\n        },\n        {\n          \"id\": 2,\n          \"name\": \"Rick and Morty\",\n          \"img\": \"https://m.media-amazon.com/images/M/MV5BZjRjOTFkOTktZWUzMi00YzMyLThkMmYtMjEwNmQyNzliYTNmXkEyXkFqcGdeQXVyNzQ1ODk3MTQ@._V1_.jpg\",\n          \"description\": \"Bardzo Super serial polecam!\",\n          \"metadata\": {\n            \"name\": \"Author\",\n            \"value\": \"Ktos\",\n          },\n          \"rating\": 5\n        }\n      ]\n    },\n    {\n      id: 2,\n      platformName: \"Spotify\",\n      platformItems: [\n        {\n          \"id\": 1,\n          \"name\": \"Dupa\",\n          \"img\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Criminal-Minds.svg/1200px-Criminal-Minds.svg.png\",\n          \"description\": \"Super serial polecam!\",\n          \"metadata\": {\n            \"name\": \"Author\",\n            \"value\": \"Ktos\",\n          },\n          \"rating\": 5\n        },\n        {\n          \"id\": 2,\n          \"name\": \"Cycki\",\n          \"img\": \"https://m.media-amazon.com/images/M/MV5BZjRjOTFkOTktZWUzMi00YzMyLThkMmYtMjEwNmQyNzliYTNmXkEyXkFqcGdeQXVyNzQ1ODk3MTQ@._V1_.jpg\",\n          \"description\": \"Bardzo Super serial polecam!\",\n          \"metadata\": {\n            \"name\": \"Author\",\n            \"value\": \"Ktos\",\n          },\n          \"rating\": 5\n        }],\n    },\n    {\n      id: 3,\n      platformName: \"HBO GO\",\n      platformItems: [],\n    },\n    {\n      id: 4,\n      platformName: \"YouTube\",\n      platformItems: [],\n    }\n  ];\n\n  return (\n    <Site platforms={nowaListaWszystkiego}/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}